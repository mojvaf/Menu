{"version":3,"sources":["components/image/open.jpg","components/image/challenge.jpg","components/image/sign.jpg","components/image/carousel1.jpg","components/image/carousel2.jpg","components/Main.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Main","className","src","open","alt","href","role","challenge","sign","Header","useState","navOpen","setNavOpen","Carousel","Item","carousel1","Caption","carousel2","type","data-toggle","data-target","onClick","placeholder","Footer","show","setShow","email","values","setValues","submitted","setSubmitted","valid","setValid","handleSubmitted","event","preventDefault","Button","size","Modal","onHide","animation","closeButton","Title","Body","onSubmit","variant","block","for","onChange","target","value","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c628498f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/open.9ea23cd0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/challenge.be49e877.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sign.7c5f0fce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carousel1.40d59b51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carousel2.241e48bd.jpg\";","import React from \"react\";\r\nimport open from \"./image/open.jpg\";\r\nimport challenge from \"./image/challenge.jpg\";\r\nimport sign from \"./image/sign.jpg\";\r\nconst Main = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"container text-center py-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 \">\r\n            <img\r\n              className=\"rounded-circle\"\r\n              src={open}\r\n              alt=\"restaurants images\"\r\n            />\r\n            <h2>Over 50 restaurants</h2>\r\n            <p>Treat your self next time you come here</p>\r\n            <p>\r\n              <a className=\"btn btn-secondary\" href=\"\" role=\"button\">\r\n                View details &raquo;\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <img\r\n              className=\"rounded-circle\"\r\n              src={challenge}\r\n              alt=\"eating challenge images\"\r\n            />\r\n            <h2>Fancy a challenge?</h2>\r\n            <p>Why not try our famous burger eating challenges!</p>\r\n            <a className=\"btn btn-secondary\" href=\"\" role=\"button\">\r\n              View details &raquo;\r\n            </a>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <img className=\"rounded-circle\" src={sign} alt=\"reputation image\" />\r\n            <h2>Established 2003</h2>\r\n            <p>Our reputation does not lie! come and try</p>\r\n            <a className=\"btn btn-secondary\" href=\"\" role=\"button\">\r\n              View details &raquo;\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Main;\r\n","import React, { useState } from \"react\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport carousel1 from \"./image/carousel1.jpg\";\r\nimport carousel2 from \"./image/carousel2.jpg\";\r\n\r\nconst Header = () => {\r\n  const [navOpen, setNavOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Carousel>\r\n        <Carousel.Item>\r\n          <img className=\"d-block w-100\" src={carousel1} alt=\"First slide\" />\r\n          <Carousel.Caption>\r\n            <h3>Made to order</h3>\r\n            <p>Using only the finest ingredients.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img className=\"d-block w-100\" src={carousel2} alt=\"Third slide\" />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Over 50 years on your menu</h3>\r\n            <p>Or build your own!</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n\r\n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"\">\r\n          Gourmet Burgers\r\n        </a>\r\n\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarCollapse\"\r\n          onClick={() => setNavOpen(!navOpen)}\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className={navOpen ? !navOpen : \"collapse navbar-collapse\"}>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\">Locations</a>\r\n            </li>\r\n          </ul>\r\n          <form className=\"form-inline my-2\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"text\"\r\n              placeholder=\"search\"\r\n            />\r\n            <button className=\"btn btn-outline-success mr-2\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nconst Footer = () => {\r\n  const [show, setShow] = useState(true);\r\n  const [values, setValues] = useState({\r\n    email: \"\"\r\n  });\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [valid, setValid] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleEmail = event => {\r\n    setValues({ ...values, email: event.target.value });\r\n  };\r\n\r\n  const handleSubmitted = event => {\r\n    event.preventDefault();\r\n    if (values.email) {\r\n      setValid(true);\r\n    }\r\n    setSubmitted(true);\r\n  };\r\n  return (\r\n    <div className=\"container-fluid bg-dark \">\r\n      <div className=\"row text-center\">\r\n        <div className=\"col-md-7 text-light font-italic\">\r\n          <p>Please sign up for exclusive offers!</p>\r\n        </div>\r\n        <div className=\"col-md-5\">\r\n          <Button\r\n            className=\"btn btn-success mt-1\"\r\n            size=\"sm\"\r\n            onClick={handleShow}\r\n          >\r\n            Sign up here\r\n          </Button>\r\n\r\n          <Modal show={show} onHide={handleClose} animation={false}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Please write your information</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div className=\"model-body\">\r\n                <div className=\"form-group\" onSubmit={handleSubmitted}>\r\n                  {submitted && valid ? (\r\n                    <Button variant=\"success\" block>\r\n                      Success! Thank you for registering\r\n                    </Button>\r\n                  ) : null}\r\n\r\n                  <label for=\"nameInput\" className=\"mt-3\">\r\n                    Your email:\r\n                  </label>\r\n                  <input\r\n                    onChange={handleEmail}\r\n                    value={values.email}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  {submitted && !values.email ? (\r\n                    <div className=\"danger\">please enter your email</div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"justify-content-between\">\r\n              <div className=\"form-check form-check-inline\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  value=\"option1\"\r\n                ></input>\r\n                <label className=\"form-check-label\">contact by email</label>\r\n              </div>\r\n              <div className=\"form-check form-check-inline\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  value=\"option1\"\r\n                ></input>\r\n                <label className=\"form-check-label\">contact by post</label>\r\n              </div>\r\n              <Button variant=\"primary\" onClick={handleSubmitted}>\r\n                submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Footer;\r\n","import React from \"react\";\nimport Main from \"./components/Main\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}